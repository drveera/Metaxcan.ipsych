#!/bin/make


#combine the covariance files
$(outcome).covariance.matrix.gz:$(outname).chr22.covariance.matrix.gz
	echo "GENE RSID1 RSID2 VALUE" > $(outname).matrix.head
	gzip $(outname).matrix.head
	cat $(outname).matrix.head.gz $(outname).*.covariance.matrix.gz > $(outname).covariance.matrix.gz
	rm $(outname).matrix.head


#calculate the covariance
$(outname)%covariance.matrix.gz:$(outname)%dosage.gz
	for i in `seq 22`; do \
Rscript $(sd)/calculate.covariance.new.R $(outname).weights.csv $(outname).chr$$i.dosage.gz $(outname).chr$$i.covariance.matrix; \
gzip $(outname).chr$$i.covariance.matrix; \
done 

# format in to predixcan
#predixcan file
$(outname)%dosage.gz:$(outname)%first5columns $(outname)%maf $(outname)%gen.traw
	for i in `seq 22`; do \
cut -f 7- $(outname).chr$$i.gen.traw > $(outname).chr$$i.doses; \
paste $(outname).chr$$i.first5columns $(outname).chr$$i.maf $(outname).chr$$i.doses | sed 1d > $(outname).chr$$i.dosage.tmp | $(sd)/imputeNA.sh $(outname).chr$$i.dosage.tmp > $(outname).chr$$i.dosage
rm $(outname).chr$$i.dosage.tmp
gzip $(outname).chr$$i.dosage; \
echo "chrom$$i done!"; \
done


# first 5 columns
$(outname)%first5columns:$(outname)%gen.traw
	for i in `seq 22`; do \
awk '{print "chr" $$1 "\t" $$2 "\t" $$4 "\t" $$6 "\t" $$5}' $(outname).chr$$i.gen.traw > $(outname).chr$$i.first5columns; \
done

# maf column
$(outname)%maf:$(outname)%frq
	for i in `seq 22`; do \
awk '{print $$5}' $(outname).chr$$i.frq | sed 1d > $(outname).chr$$i.maf ; \
done

# calculate allele frequencies
$(outname)%frq:$(outname)%gen.traw $(outname).mismatch.removed.bim
	for i in `seq 22`; \
do \
plink --bfile $(outname).mismatch.removed \
--chr $$i --freq --out $(outname).chr$$i; \
done;

# write recode A-transpose format
$(outname)%gen.traw:$(outname).mismatch.removed.bim $(outname).snps.not.extracted $(outname).rsids.mismatch.verify
	for i in `seq 22`; \
do \
	plink --bfile $(outname).mismatch.removed \
	--chr $$i \
	--recode A-transpose tab \
	--out $(outname).chr$$i.gen; \
done; 


#write snps/allele list
# create a table of number of snps queried and number of snps extracted
# create a list of snps not extracted along with its transcript IDs

$(outname).snps.not.extracted:$(outname).weights.csv $(outname).mismatch.removed.bim
	Rscript $(sd)/write.snp.report.R $(outname).weights.csv $(outname).mismatch.removed.bim $(outname).snps.not.extracted


#check the allele match again
$(outname).rsids.mismatch.verify: $(outname).mismatch.removed.bim $(outname).snplist $(outname).rsids.mismatch
	Rscript $(sd)/allele.check.R $(outname).mismatch.removed.bim $(outname).weights.csv $(outname).rsids.mismatch.verify

#remove the allele mismatched snps from the plink file
$(outname).mismatch.removed.bim:$(outname).rsids.mismatch  $(outname).bim
	plink --bfile $(outname) \
--exclude $(outname).rsids.mismatch \
--reference-allele $(outname).snplist \
--make-bed \
--out $(outname).mismatch.removed


# check if the alleles match between bim and list files
$(outname).rsids.mismatch:$(outname).bim $(outname).snplist
	Rscript $(sd)/allele.check.R $(outname).bim $(outname).weights.csv $(outname).rsids.mismatch

#extract the snps forcing the reference-allele to 
$(outname).bim:$(plinkfile).bim $(outname).snplist.c1 $(outname).snplist
	plink --bfile $(plinkfile) \
--extract $(outname).snplist.c1 \
--reference-allele $(outname).snplist \
--make-bed \
--out $(outname)


#write snplist and snplist_c1
$(outname).snplist.c1:$(outname).snplist
	cut -f 1 $(outname).snplist > $(outname).snplist.c1
$(outname).snplist:$(outname).weights.csv
	Rscript $(sd)/write.snplist.R $(outname).weights.csv $(outname).snplist

#extract the weights
$(outname).weights.csv: $(db) 
	sh $(sd)/extract.weights.sh $(db) > $(outname).weights.csv
